# A scaffold of rest interface



location ~* /(?<preset>new)$ {
  include app/meta.conf;
  # New
  postgres_query   GET "SELECT 'Create new ' || singularize('$resource')      as title,
                               'Create'                                       as label";
  postgres_rewrite GET rows edit.html;
}


location ~* /(?<id>\d+)/(?<preset>edit)$ {
  include app/meta.conf;
  # Edit
  postgres_query   GET ":WITH row as (:@:select_sql AND $resource.id=$id)        
                        SELECT row_to_json(row)                               as item,
                               'Edit ' || singularize('$resource')            as title,  
                               'Update'                                       as label
                        FROM row";
  postgres_rewrite GET HEAD rows edit.html;
  postgres_rewrite GET HEAD no_rows 404;
}


location ~* /(?<id>\d+)/undo$ {
  include app/meta.conf;
  # Edit
  postgres_query   GET "SELECT delete_and_return_new('$resource', $1)";
  postgres_rewrite GET HEAD no_rows /$resource/?undo=/$resource/$id&flash=You%20undid%20it%20-%20it%20is%20now%20deleted;
  postgres_rewrite GET HEAD no_errors /$resource/:id/?redo=/$resource/:id;
}
location ~* /(?<id>\d+)/$ {
  include app/meta.conf;
  set_form_input_json $params;


  # Show
  postgres_query   GET ":WITH row as (SELECT * from ${resource}_current where root_id=:i:id or id=:i:id ORDER by id DESC LIMIT 1) 
                        SELECT 'View ' || row.id                           as title, 
                               row_to_json(row)                               as item
                        FROM row";
  postgres_rewrite GET rows    show.html;
  postgres_rewrite GET no_rows 404;

  # Destroy
  postgres_query   DELETE "DELETE from $resource where id = $id RETURNING *";
  postgres_rewrite DELETE rows    /$resource/;
  postgres_rewrite DELETE no_rows /$resource/;
  # 404;

  # Update
  postgres_query   POST PUT  ":WITH  params as (SELECT convert_arrays(process_nested_attributes(json_extract_path(:j:params, singularize(:resource))))),
                                      new as (:@:patch_sql 
                                             FROM params p, json_populate_record(NULL::$resource, p.convert_arrays) new 
                                             RETURNING *)
 
                              SELECT 'Editing ' || singularize(:resource)     as title,
                                     params.convert_arrays::jsonb || row_to_json(new)::jsonb  as item,
                                     'Update again'                           as label,
                                     'Updated ' || singularize(:resource) 
                                                ||' successfully.'            as success,
                                     'Some ' || singularize(:resource) 
                                                ||' information is not valid.'as flash
                              FROM params, new";
  postgres_rewrite POST PUT errors    edit.html;
  postgres_rewrite POST PUT no_errors /$grandparent_resource/$grandparent_id/$parent_resource/$parent_id/$resource/:id/?flash=:success;

}

location ~* /$ {
  include app/meta.conf;
  set_form_input_json $params;

  #set $params "{}";

  # Index
  postgres_query   GET ":SELECT 
                          'Browse ' || :resource as title,
                          coalesce(json_agg(r), '[]'::json)  as items 
                        FROM(
                          :@:select_sql
                          ORDER BY id DESC
                          LIMIT 10) r;";
  postgres_rewrite GET rows index.html;

  # Create
  postgres_query   POST  ":WITH params as (SELECT convert_arrays(process_nested_attributes(json_extract_path(:j:params, singularize(:resource))))),
                                new    as (:@:insert_sql 
                                        FROM params p, json_populate_record(NULL::$resource, p.convert_arrays) new
                                        RETURNING *)
                            
                          SELECT 'New ' || singularize(:resource)    as title, 
                                 'Created ' || singularize(:resource)    
                                            ||' successfully.'                as success,
                                 (params.convert_arrays)::jsonb || row_to_json(new)::jsonb  as item,
                                'Try again'                                   as label 
                          FROM params, new";
  postgres_rewrite POST errors edit.html;
  postgres_rewrite POST no_errors /$grandparent_resource/$grandparent_id/$parent_resource/$parent_id/$resource/:id/?flash=:success;

}
